{"ast":null,"code":"import { createSelector } from 'reselect';\nimport appConstants from 'common/appConstants';\nimport _ from 'lodash/core';\nexport const getMessagesState = createSelector([state => {\n  return state[appConstants.store.route.messages];\n}], messagesState => messagesState);\nexport const getMessagesInbox = createSelector([getMessagesState], messagesState => {\n  try {\n    return messagesState[appConstants.destinations.inbox] ? messagesState[appConstants.destinations.inbox] : {};\n  } catch (e) {}\n\n  return {};\n});\nexport const getMessagesOutbox = createSelector([getMessagesState], messagesState => {\n  try {\n    return messagesState[appConstants.destinations.outbox] ? messagesState[appConstants.destinations.outbox] : {};\n  } catch (e) {}\n\n  return {};\n});\nexport const getMessagesInboxAll = createSelector([getMessagesInbox], messages => {\n  try {\n    return messages.all ? messages.all : {};\n  } catch (e) {}\n\n  return {};\n});\nexport const getMessagesInboxOrdered = createSelector([getMessagesInbox], messages => {\n  try {\n    return messages.ordered ? messages.ordered : [];\n  } catch (e) {}\n\n  return [];\n});\nexport const getMessagesOutboxAll = createSelector([getMessagesOutbox], messages => {\n  try {\n    return messages.all ? messages.all : {};\n  } catch (e) {}\n\n  return {};\n});\nexport const getMessagesOutboxOrdered = createSelector([getMessagesOutbox], messages => {\n  try {\n    return messages.ordered ? messages.ordered : [];\n  } catch (e) {}\n\n  return [];\n});\nexport const getMessagesInboxById = createSelector([getMessagesInboxAll, (state, id) => id], (messages, id) => {\n  try {\n    return messages[id] ? messages[id] : null;\n  } catch (e) {}\n\n  return null;\n});\nexport const getMessagesInboxByIdSubject = createSelector([getMessagesInboxById], message => {\n  try {\n    return message['subject'] ? message['subject'] : '';\n  } catch (e) {}\n\n  return '';\n});\nexport const getMessagesInboxByIdBody = createSelector([getMessagesInboxById], message => {\n  try {\n    return message['body'] ? message['body'] : '';\n  } catch (e) {}\n\n  return '';\n});\nexport const getMessagesOutboxById = createSelector([getMessagesOutboxAll, (state, id) => id], (messages, id) => {\n  try {\n    return messages[id] ? messages[id] : null;\n  } catch (e) {}\n\n  return null;\n});\nexport const getMessagesOutboxByIdSubject = createSelector([getMessagesOutboxById], message => {\n  try {\n    return message['subject'] ? message['subject'] : '';\n  } catch (e) {}\n\n  return '';\n});\nexport const getMessagesOutboxByIdBody = createSelector([getMessagesOutboxById], message => {\n  try {\n    return message['body'] ? message['body'] : '';\n  } catch (e) {}\n\n  return '';\n});\nexport const getMessagesAll = createSelector([getMessagesInboxAll, getMessagesOutboxAll], (inbox, outbox) => {\n  try {\n    return { ...inbox,\n      ...outbox\n    };\n  } catch (e) {}\n\n  return {};\n});\nexport const getMessagesAllById = createSelector([getMessagesAll, (state, id) => id], (all, id) => {\n  try {\n    return all[id] ? all[id] : null;\n  } catch (e) {}\n\n  return null;\n});\nexport const getMessagesAllByUserId = createSelector([getMessagesAll, (state, id) => id], (all, userId) => {\n  try {\n    return _.chain(all).filter(message => message.userId === userId).sort((a, b) => a.createdAt - b.createdAt).value();\n  } catch (e) {}\n\n  return [];\n});\nexport const getMessagesAllByIdIsInbox = createSelector([getMessagesAllById], message => {\n  try {\n    return message ? message.destination === appConstants.destinations.inbox : false;\n  } catch (e) {}\n\n  return false;\n});\nexport const getMessagesAllByIdIsOutbox = createSelector([getMessagesAllById], message => {\n  try {\n    return message ? message.destination === appConstants.destinations.outbox : false;\n  } catch (e) {}\n\n  return false;\n});\nexport const getMessagesAllByIdSubject = createSelector([getMessagesAllById], message => {\n  try {\n    return message['subject'] ? message['subject'] : '';\n  } catch (e) {}\n\n  return '';\n});\nexport const getMessagesAllByIdBody = createSelector([getMessagesAllById], message => {\n  try {\n    return message['body'] ? message['body'] : '';\n  } catch (e) {}\n\n  return '';\n});\nexport const getMessagesAllByIdIsRead = createSelector([getMessagesAllById], message => {\n  try {\n    return message['read'] ? !!message['read'] : false;\n  } catch (e) {}\n\n  return false;\n});","map":{"version":3,"sources":["/EX_WIN/PROJECTS/MyGithub/emails-app/app/src/store/messages/selectors.js"],"names":["createSelector","appConstants","_","getMessagesState","state","store","route","messages","messagesState","getMessagesInbox","destinations","inbox","e","getMessagesOutbox","outbox","getMessagesInboxAll","all","getMessagesInboxOrdered","ordered","getMessagesOutboxAll","getMessagesOutboxOrdered","getMessagesInboxById","id","getMessagesInboxByIdSubject","message","getMessagesInboxByIdBody","getMessagesOutboxById","getMessagesOutboxByIdSubject","getMessagesOutboxByIdBody","getMessagesAll","getMessagesAllById","getMessagesAllByUserId","userId","chain","filter","sort","a","b","createdAt","value","getMessagesAllByIdIsInbox","destination","getMessagesAllByIdIsOutbox","getMessagesAllByIdSubject","getMessagesAllByIdBody","getMessagesAllByIdIsRead"],"mappings":"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","sourcesContent":["import { createSelector } from 'reselect'\nimport appConstants from 'common/appConstants'\nimport _ from 'lodash/core'\n\nexport const getMessagesState = createSelector(\n    [\n        (state) => {\n            return state[ appConstants.store.route.messages ]\n        },\n    ],\n    (messagesState) => messagesState,\n)\n\nexport const getMessagesInbox = createSelector(\n    [\n        getMessagesState\n    ],\n    (messagesState) => {\n        try {\n            return messagesState[ appConstants.destinations.inbox ] ? messagesState[ appConstants.destinations.inbox ] : {}\n        } catch (e) {\n        }\n        return {}\n    },\n)\n\nexport const getMessagesOutbox = createSelector(\n    [\n        getMessagesState\n    ],\n    (messagesState) => {\n        try {\n            return messagesState[ appConstants.destinations.outbox ] ? messagesState[ appConstants.destinations.outbox ] : {}\n        } catch (e) {\n        }\n        return {}\n    },\n)\n\nexport const getMessagesInboxAll = createSelector(\n    [\n        getMessagesInbox,\n    ],\n    (messages) => {\n        try {\n            return messages.all ? messages.all : {}\n        } catch (e) {\n        }\n        return {}\n    },\n)\n\nexport const getMessagesInboxOrdered = createSelector(\n    [\n        getMessagesInbox,\n    ],\n    (messages) => {\n        try {\n            return messages.ordered ? messages.ordered : []\n        } catch (e) {\n        }\n        return []\n    },\n)\n\nexport const getMessagesOutboxAll = createSelector(\n    [\n        getMessagesOutbox,\n    ],\n    (messages) => {\n        try {\n            return messages.all ? messages.all : {}\n        } catch (e) {\n        }\n        return {}\n    },\n)\nexport const getMessagesOutboxOrdered = createSelector(\n    [\n        getMessagesOutbox,\n    ],\n    (messages) => {\n        try {\n            return messages.ordered ? messages.ordered : []\n        } catch (e) {\n        }\n        return []\n    },\n)\n\nexport const getMessagesInboxById = createSelector(\n    [\n        getMessagesInboxAll,\n        (state, id) => id\n    ],\n    (messages, id) => {\n        try {\n            return messages[ id ] ? messages[ id ] : null\n        } catch (e) {\n        }\n        return null\n    },\n)\nexport const getMessagesInboxByIdSubject = createSelector(\n    [\n        getMessagesInboxById\n    ],\n    (message) => {\n        try {\n            return message[ 'subject' ] ? message[ 'subject' ] : ''\n        } catch (e) {\n        }\n        return ''\n    },\n)\nexport const getMessagesInboxByIdBody = createSelector(\n    [\n        getMessagesInboxById\n    ],\n    (message) => {\n        try {\n            return message[ 'body' ] ? message[ 'body' ] : ''\n        } catch (e) {\n        }\n        return ''\n    },\n)\n\nexport const getMessagesOutboxById = createSelector(\n    [\n        getMessagesOutboxAll,\n        (state, id) => id\n    ],\n    (messages, id) => {\n        try {\n            return messages[ id ] ? messages[ id ] : null\n        } catch (e) {\n        }\n        return null\n    },\n)\n\nexport const getMessagesOutboxByIdSubject = createSelector(\n    [\n        getMessagesOutboxById\n    ],\n    (message) => {\n        try {\n            return message[ 'subject' ] ? message[ 'subject' ] : ''\n        } catch (e) {\n        }\n        return ''\n    },\n)\nexport const getMessagesOutboxByIdBody = createSelector(\n    [\n        getMessagesOutboxById\n    ],\n    (message) => {\n        try {\n            return message[ 'body' ] ? message[ 'body' ] : ''\n        } catch (e) {\n        }\n        return ''\n    },\n)\n\nexport const getMessagesAll = createSelector(\n    [\n        getMessagesInboxAll,\n        getMessagesOutboxAll,\n    ],\n    (inbox, outbox) => {\n        try {\n            return {\n                ...inbox,\n                ...outbox\n            }\n            \n        } catch (e) {\n        }\n        return {}\n    }\n)\n\nexport const getMessagesAllById = createSelector(\n    [\n        getMessagesAll,\n        (state, id) => id\n    ],\n    (all, id) => {\n        try {\n            return all[ id ] ? all[ id ] : null\n            \n        } catch (e) {\n        }\n        return null\n    }\n)\n\nexport const getMessagesAllByUserId = createSelector(\n    [\n        getMessagesAll,\n        (state, id) => id\n    ],\n    (all, userId) => {\n        try {\n            return _.chain(all)\n            .filter(message => message.userId === userId)\n            .sort((a, b) => a.createdAt - b.createdAt)\n            .value()\n        } catch (e) {\n        }\n        return []\n    },\n)\n\nexport const getMessagesAllByIdIsInbox = createSelector(\n    [\n        getMessagesAllById,\n    ],\n    (message) => {\n        try {\n            return message ? message.destination === appConstants.destinations.inbox : false\n            \n        } catch (e) {\n        }\n        return false\n    }\n)\n\nexport const getMessagesAllByIdIsOutbox = createSelector(\n    [\n        getMessagesAllById,\n    ],\n    (message) => {\n        try {\n            return message ? message.destination === appConstants.destinations.outbox : false\n            \n        } catch (e) {\n        }\n        return false\n    }\n)\n\nexport const getMessagesAllByIdSubject = createSelector(\n    [\n        getMessagesAllById,\n    ],\n    (message) => {\n        try {\n            return message[ 'subject' ] ? message[ 'subject' ] : ''\n            \n        } catch (e) {\n        }\n        return ''\n    }\n)\n\nexport const getMessagesAllByIdBody = createSelector(\n    [\n        getMessagesAllById,\n    ],\n    (message) => {\n        try {\n            return message[ 'body' ] ? message[ 'body' ] : ''\n            \n        } catch (e) {\n        }\n        return ''\n    }\n)\nexport const getMessagesAllByIdIsRead = createSelector(\n    [\n        getMessagesAllById,\n    ],\n    (message) => {\n        try {\n            return message[ 'read' ] ? !!message[ 'read' ] : false\n            \n        } catch (e) {\n        }\n        return false\n    }\n)\n\n"]},"metadata":{},"sourceType":"module"}