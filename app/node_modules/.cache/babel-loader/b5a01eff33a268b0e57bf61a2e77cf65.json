{"ast":null,"code":"import { createAction } from 'redux-actions';\nimport { getCreatorForType, toCamelCase, toUpperCase } from './utils';\nexport default function createRoutineCreator(stages, separator) {\n  if (separator === void 0) {\n    separator = '/';\n  }\n\n  var stagesArray = stages;\n\n  if (!Array.isArray(stagesArray)) {\n    stagesArray = [].concat(stages);\n  }\n\n  if (!stages || stagesArray.length === 0) {\n    throw new Error('Routine `stages` must not be empty');\n  }\n\n  var createRoutine = function createRoutine(typePrefix, payloadCreator, metaCreator) {\n    if (typeof typePrefix !== 'string') {\n      throw new Error('Routine `typePrefix` must be a string');\n    }\n\n    var createActionCreator = function createActionCreator(type) {\n      return createAction(\"\" + typePrefix + separator + type, getCreatorForType(type, payloadCreator), getCreatorForType(type, metaCreator));\n    };\n\n    var routine = stagesArray.reduce(function (result, stage) {\n      var actionCreator = createActionCreator(stage);\n      result[toCamelCase(stage)] = actionCreator;\n      result[toUpperCase(stage)] = actionCreator.toString();\n      return result;\n    }, createActionCreator(stagesArray[0]));\n    routine._STAGES = stagesArray;\n    routine._PREFIX = typePrefix;\n    return routine;\n  };\n\n  createRoutine.STAGES = stagesArray;\n  return createRoutine;\n}\n;","map":{"version":3,"sources":["/EX_WIN/PROJECTS/MyGithub/emails-app/app/node_modules/redux-saga-routines/es/createRoutineCreator.js"],"names":["createAction","getCreatorForType","toCamelCase","toUpperCase","createRoutineCreator","stages","separator","stagesArray","Array","isArray","concat","length","Error","createRoutine","typePrefix","payloadCreator","metaCreator","createActionCreator","type","routine","reduce","result","stage","actionCreator","toString","_STAGES","_PREFIX","STAGES"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,SAASC,iBAAT,EAA4BC,WAA5B,EAAyCC,WAAzC,QAA4D,SAA5D;AACA,eAAe,SAASC,oBAAT,CAA8BC,MAA9B,EAAsCC,SAAtC,EAAiD;AAC9D,MAAIA,SAAS,KAAK,KAAK,CAAvB,EAA0B;AACxBA,IAAAA,SAAS,GAAG,GAAZ;AACD;;AAED,MAAIC,WAAW,GAAGF,MAAlB;;AAEA,MAAI,CAACG,KAAK,CAACC,OAAN,CAAcF,WAAd,CAAL,EAAiC;AAC/BA,IAAAA,WAAW,GAAG,GAAGG,MAAH,CAAUL,MAAV,CAAd;AACD;;AAED,MAAI,CAACA,MAAD,IAAWE,WAAW,CAACI,MAAZ,KAAuB,CAAtC,EAAyC;AACvC,UAAM,IAAIC,KAAJ,CAAU,oCAAV,CAAN;AACD;;AAED,MAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,UAAvB,EAAmCC,cAAnC,EAAmDC,WAAnD,EAAgE;AAClF,QAAI,OAAOF,UAAP,KAAsB,QAA1B,EAAoC;AAClC,YAAM,IAAIF,KAAJ,CAAU,uCAAV,CAAN;AACD;;AAED,QAAIK,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,IAA7B,EAAmC;AAC3D,aAAOlB,YAAY,CAAC,KAAKc,UAAL,GAAkBR,SAAlB,GAA8BY,IAA/B,EAAqCjB,iBAAiB,CAACiB,IAAD,EAAOH,cAAP,CAAtD,EAA8Ed,iBAAiB,CAACiB,IAAD,EAAOF,WAAP,CAA/F,CAAnB;AACD,KAFD;;AAIA,QAAIG,OAAO,GAAGZ,WAAW,CAACa,MAAZ,CAAmB,UAAUC,MAAV,EAAkBC,KAAlB,EAAyB;AACxD,UAAIC,aAAa,GAAGN,mBAAmB,CAACK,KAAD,CAAvC;AACAD,MAAAA,MAAM,CAACnB,WAAW,CAACoB,KAAD,CAAZ,CAAN,GAA6BC,aAA7B;AACAF,MAAAA,MAAM,CAAClB,WAAW,CAACmB,KAAD,CAAZ,CAAN,GAA6BC,aAAa,CAACC,QAAd,EAA7B;AACA,aAAOH,MAAP;AACD,KALa,EAKXJ,mBAAmB,CAACV,WAAW,CAAC,CAAD,CAAZ,CALR,CAAd;AAMAY,IAAAA,OAAO,CAACM,OAAR,GAAkBlB,WAAlB;AACAY,IAAAA,OAAO,CAACO,OAAR,GAAkBZ,UAAlB;AACA,WAAOK,OAAP;AACD,GAlBD;;AAoBAN,EAAAA,aAAa,CAACc,MAAd,GAAuBpB,WAAvB;AACA,SAAOM,aAAP;AACD;AACD","sourcesContent":["import { createAction } from 'redux-actions';\nimport { getCreatorForType, toCamelCase, toUpperCase } from './utils';\nexport default function createRoutineCreator(stages, separator) {\n  if (separator === void 0) {\n    separator = '/';\n  }\n\n  var stagesArray = stages;\n\n  if (!Array.isArray(stagesArray)) {\n    stagesArray = [].concat(stages);\n  }\n\n  if (!stages || stagesArray.length === 0) {\n    throw new Error('Routine `stages` must not be empty');\n  }\n\n  var createRoutine = function createRoutine(typePrefix, payloadCreator, metaCreator) {\n    if (typeof typePrefix !== 'string') {\n      throw new Error('Routine `typePrefix` must be a string');\n    }\n\n    var createActionCreator = function createActionCreator(type) {\n      return createAction(\"\" + typePrefix + separator + type, getCreatorForType(type, payloadCreator), getCreatorForType(type, metaCreator));\n    };\n\n    var routine = stagesArray.reduce(function (result, stage) {\n      var actionCreator = createActionCreator(stage);\n      result[toCamelCase(stage)] = actionCreator;\n      result[toUpperCase(stage)] = actionCreator.toString();\n      return result;\n    }, createActionCreator(stagesArray[0]));\n    routine._STAGES = stagesArray;\n    routine._PREFIX = typePrefix;\n    return routine;\n  };\n\n  createRoutine.STAGES = stagesArray;\n  return createRoutine;\n}\n;"]},"metadata":{},"sourceType":"module"}