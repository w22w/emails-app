{"ast":null,"code":"var _jsxFileName = \"/EX_WIN/PROJECTS/MyGithub/emails-app/app/src/containers/SendForm/index.js\",\n    _s = $RefreshSig$();\n\nimport appConstants from \"common/appConstants\";\nimport React, { useCallback } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport css from \"./SendForm.module.scss\";\nimport ClassNames from \"classnames\";\nimport { useDispatch } from \"react-redux\";\nimport { addMessage } from \"store/messages/actions\";\nimport uuid from \"react-uuid\";\nimport cssMain from '../Main/Main.module.scss';\nimport history from 'common/history';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SendForm = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const onSuccess = useCallback(data => {\n    dispatch(addMessage({ ...data,\n      createdAt: new Date().getTime(),\n      messageId: uuid()\n    }));\n  }, [dispatch]);\n  const onFailure = useCallback(error => {\n    console.log(error);\n  }, []);\n\n  const onGoHome = e => {\n    e && e.stopPropagation && e.stopPropagation();\n    history.push(appConstants.router.root);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.Form,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSuccess, onFailure),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.FormContent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.FormHead,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: cssMain.HomeButton,\n            onClick: onGoHome,\n            children: \"\\uD83C\\uDFE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), \"Send email\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.InputBlock,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"User Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: ClassNames({\n              [css.Invalid]: !!errors.userId\n            }),\n            name: \"userId\",\n            placeholder: \"User Id\",\n            ref: register({\n              required: \"userId field is required\",\n              maxLength: {\n                value: 100,\n                message: \"max length is 100\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), errors.userId && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: css.Message,\n            children: errors.userId.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.InputBlock,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"User Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: ClassNames({\n              [css.Invalid]: !!errors.username\n            }),\n            name: \"username\",\n            placeholder: \"User Name\",\n            ref: register({\n              required: \"username field is required\",\n              minLength: {\n                value: 2,\n                message: \"min length is 2\"\n              },\n              maxLength: {\n                value: 100,\n                message: \"max length is 100\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), errors.username && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: css.Message,\n            children: errors.username.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.InputBlock,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Destimation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: ClassNames({\n              [css.Invalid]: !!errors.destination\n            }),\n            name: \"destination\",\n            placeholder: \"Select...\",\n            ref: register({\n              required: true\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: appConstants.destinations.inbox,\n              children: \"Inbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: appConstants.destinations.outbox,\n              children: \"Outbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), errors.destination && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: css.Message,\n            children: errors.destination.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.InputBlock,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: ClassNames({\n              [css.Invalid]: !!errors.subject\n            }),\n            name: \"subject\",\n            placeholder: \"Subject\",\n            ref: register({\n              required: \"subject field is required\",\n              minLength: {\n                value: 5,\n                message: \"min length is 5\"\n              },\n              maxLength: {\n                value: 100,\n                message: \"max length is 100\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), errors.subject && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: css.Message,\n            children: errors.subject.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.InputBlock,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: 5,\n            className: ClassNames({\n              [css.Invalid]: !!errors.body\n            }),\n            name: \"body\",\n            placeholder: \"Body\",\n            ref: register({\n              required: \"body field is required\",\n              minLength: {\n                value: 5,\n                message: \"min length is 5\"\n              },\n              maxLength: {\n                value: 200,\n                message: \"max length is 200\"\n              }\n            }),\n            children: ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), errors.body && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: css.Message,\n            children: errors.body.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.InputBlock,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: css.Submit,\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SendForm, \"aEYiM7i++r+Cl7ZmfOKjIcOFR+A=\", false, function () {\n  return [useDispatch, useForm];\n});\n\n_c = SendForm;\nexport default SendForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendForm\");","map":{"version":3,"sources":["/EX_WIN/PROJECTS/MyGithub/emails-app/app/src/containers/SendForm/index.js"],"names":["appConstants","React","useCallback","useForm","css","ClassNames","useDispatch","addMessage","uuid","cssMain","history","SendForm","dispatch","register","handleSubmit","errors","onSuccess","data","createdAt","Date","getTime","messageId","onFailure","error","console","log","onGoHome","e","stopPropagation","push","router","root","Form","FormContent","FormHead","HomeButton","InputBlock","Invalid","userId","required","maxLength","value","message","Message","username","minLength","destination","destinations","inbox","outbox","subject","body","Submit"],"mappings":"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","sourcesContent":["import appConstants from \"common/appConstants\";\nimport React, { useCallback } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport css from \"./SendForm.module.scss\";\nimport ClassNames from \"classnames\";\nimport { useDispatch } from \"react-redux\";\nimport { addMessage } from \"store/messages/actions\";\nimport uuid from \"react-uuid\";\nimport cssMain from '../Main/Main.module.scss';\nimport history from 'common/history';\n\nconst SendForm = () => {\n    const dispatch = useDispatch();\n    const { register, handleSubmit, errors } = useForm();\n    const onSuccess = useCallback((data) => {\n        dispatch(\n            addMessage({\n                ...data,\n                createdAt: new Date().getTime(),\n                messageId: uuid(),\n            })\n        );\n    }, [ dispatch ]);\n    \n    const onFailure = useCallback((error) => {\n        console.log(error);\n    }, []);\n    \n    const onGoHome = (e) => {\n        e && e.stopPropagation && e.stopPropagation()\n        history.push(appConstants.router.root)\n    }\n    \n    return (\n        <div className={css.Form}>\n            \n            <form onSubmit={handleSubmit(onSuccess, onFailure)}>\n                <div className={css.FormContent}>\n                    <div className={css.FormHead}>\n                        <div className={cssMain.HomeButton} onClick={onGoHome}>&#127968;</div>\n                        Send email\n                    </div>\n                    <div className={css.InputBlock}>\n                        <label>User Id</label>\n                        <input\n                            className={ClassNames({ [ css.Invalid ]: !!errors.userId })}\n                            name=\"userId\"\n                            placeholder=\"User Id\"\n                            ref={register({\n                                required: \"userId field is required\",\n                                maxLength: { value: 100, message: \"max length is 100\" },\n                            })}\n                        />\n                        {errors.userId && (\n                            <div className={css.Message}>{errors.userId.message}</div>\n                        )}\n                    </div>\n                    <div className={css.InputBlock}>\n                        <label>User Name</label>\n                        <input\n                            className={ClassNames({ [ css.Invalid ]: !!errors.username })}\n                            name=\"username\"\n                            placeholder=\"User Name\"\n                            ref={register({\n                                required: \"username field is required\",\n                                minLength: { value: 2, message: \"min length is 2\" },\n                                maxLength: { value: 100, message: \"max length is 100\" },\n                            })}\n                        />\n                        {errors.username && (\n                            <div className={css.Message}>{errors.username.message}</div>\n                        )}\n                    </div>\n                    <div className={css.InputBlock}>\n                        <label>Destimation</label>\n                        <select\n                            className={ClassNames({ [ css.Invalid ]: !!errors.destination })}\n                            name=\"destination\"\n                            placeholder=\"Select...\"\n                            ref={register({ required: true })}\n                        >\n                            <option value={appConstants.destinations.inbox}>Inbox</option>\n                            <option value={appConstants.destinations.outbox}>Outbox</option>\n                        </select>\n                        {errors.destination && (\n                            <div className={css.Message}>{errors.destination.message}</div>\n                        )}\n                    </div>\n                    <div className={css.InputBlock}>\n                        <label>Subject</label>\n                        <input\n                            className={ClassNames({ [ css.Invalid ]: !!errors.subject })}\n                            name=\"subject\"\n                            placeholder=\"Subject\"\n                            ref={register({\n                                required: \"subject field is required\",\n                                minLength: { value: 5, message: \"min length is 5\" },\n                                maxLength: { value: 100, message: \"max length is 100\" },\n                            })}\n                        />\n                        {errors.subject && (\n                            <div className={css.Message}>{errors.subject.message}</div>\n                        )}\n                    </div>\n                    <div className={css.InputBlock}>\n                        <label>Body</label>\n                        <textarea rows={5}\n                                  className={ClassNames({ [ css.Invalid ]: !!errors.body })}\n                                  name=\"body\"\n                                  placeholder=\"Body\"\n                                  ref={register({\n                                      required: \"body field is required\",\n                                      minLength: { value: 5, message: \"min length is 5\" },\n                                      maxLength: { value: 200, message: \"max length is 200\" },\n                                  })}\n                        >{''}</textarea>\n                        {errors.body && (\n                            <div className={css.Message}>{errors.body.message}</div>\n                        )}\n                    </div>\n                    <div className={css.InputBlock}>\n                        <button className={css.Submit} type=\"submit\">\n                            Submit\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default SendForm;\n"]},"metadata":{},"sourceType":"module"}