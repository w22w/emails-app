{"ast":null,"code":"import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { sagas as rootSagas } from 'store/sagas';\nimport rootReducer from 'store/reducers';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist-indexeddb-storage';\nconst initialState = {};\nconst persistConfig = {\n  timeout: 0,\n  key: 'email-app-root-key',\n  storage: storage('appDB'),\n  whitelist: [\"messages\", \"users\"]\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst saga = createSagaMiddleware();\nconst middlewares = [saga];\nconst store = createStore(persistedReducer, initialState, compose(applyMiddleware(...middlewares)));\nsaga.run(rootSagas);\nexport default store;","map":{"version":3,"sources":["/EX_WIN/PROJECTS/MyGithub/emails-app/app/src/store/configStore/store.prod.js"],"names":["applyMiddleware","compose","createStore","createSagaMiddleware","sagas","rootSagas","rootReducer","persistReducer","storage","initialState","persistConfig","timeout","key","whitelist","persistedReducer","saga","middlewares","store","run"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,aAAnC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,iCAApB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,OAAO,EAAE,CADS;AAElBC,EAAAA,GAAG,EAAE,oBAFa;AAGlBJ,EAAAA,OAAO,EAAEA,OAAO,CAAC,OAAD,CAHE;AAIlBK,EAAAA,SAAS,EAAE,CAAE,UAAF,EAAc,OAAd;AAJO,CAAtB;AAOA,MAAMC,gBAAgB,GAAGP,cAAc,CAACG,aAAD,EAAgBJ,WAAhB,CAAvC;AAEA,MAAMS,IAAI,GAAGZ,oBAAoB,EAAjC;AAEA,MAAMa,WAAW,GAAG,CAAED,IAAF,CAApB;AAEA,MAAME,KAAK,GAAGf,WAAW,CAACY,gBAAD,EAAmBL,YAAnB,EAAiCR,OAAO,CAACD,eAAe,CAAC,GAAGgB,WAAJ,CAAhB,CAAxC,CAAzB;AAEAD,IAAI,CAACG,GAAL,CAASb,SAAT;AAEA,eAAeY,KAAf","sourcesContent":["import { applyMiddleware, compose, createStore } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { sagas as rootSagas } from 'store/sagas'\nimport rootReducer from 'store/reducers'\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist-indexeddb-storage';\n\nconst initialState = {}\n\nconst persistConfig = {\n    timeout: 0,\n    key: 'email-app-root-key',\n    storage: storage('appDB'),\n    whitelist: [ \"messages\", \"users\" ]\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst saga = createSagaMiddleware()\n\nconst middlewares = [ saga ]\n\nconst store = createStore(persistedReducer, initialState, compose(applyMiddleware(...middlewares)))\n\nsaga.run(rootSagas)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}