{"ast":null,"code":"import _regeneratorRuntime from\"/EX_WIN/PROJECTS/MyGithub/emails-app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(addMessageHandler),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(clearMessagesHandler),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(markMessagesReadForUserHandler),_marked4=/*#__PURE__*/_regeneratorRuntime.mark(watchMessagesSaga);import{all,delay,put,takeEvery}from'redux-saga/effects';import*as ACTIONS from'./actions';import{updateUser}from'store/users/actions';import appConstants from'common/appConstants';import history from'common/history';export function addMessageHandler(action){var _action$payload,userId,username,destination,createdAt,messageId;return _regeneratorRuntime.wrap(function addMessageHandler$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return put(ACTIONS.addMessage.request(action.payload));case 2:_context.prev=2;_action$payload=action.payload,userId=_action$payload.userId,username=_action$payload.username,destination=_action$payload.destination,createdAt=_action$payload.createdAt,messageId=_action$payload.messageId;_context.next=6;return put(updateUser({userId:userId,username:username,messageId:messageId,destination:destination,createdAt:createdAt}));case 6:_context.next=8;return put(ACTIONS.addMessage.success(action.payload));case 8:_context.next=10;return delay(0.5);case 10:if(destination===appConstants.destinations.inbox){history.push(appConstants.router.inbox);}else{history.push(appConstants.router.outbox);}_context.next=17;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](2);_context.next=17;return put(ACTIONS.addMessage.failure(_context.t0));case 17:case\"end\":return _context.stop();}}},_marked,null,[[2,13]]);}export function clearMessagesHandler(action){return _regeneratorRuntime.wrap(function clearMessagesHandler$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return put(ACTIONS.clearMessages.success(action.payload));case 2:case\"end\":return _context2.stop();}}},_marked2);}export function markMessagesReadForUserHandler(action){return _regeneratorRuntime.wrap(function markMessagesReadForUserHandler$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return put(ACTIONS.markMessagesReadForUser.success(action.payload));case 2:case\"end\":return _context3.stop();}}},_marked3);}export function watchMessagesSaga(){return _regeneratorRuntime.wrap(function watchMessagesSaga$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return all([takeEvery(ACTIONS.addMessage.TRIGGER,addMessageHandler),takeEvery(ACTIONS.clearMessages.TRIGGER,clearMessagesHandler),takeEvery(ACTIONS.markMessagesReadForUser.TRIGGER,markMessagesReadForUserHandler)]);case 2:case\"end\":return _context4.stop();}}},_marked4);}","map":{"version":3,"sources":["/EX_WIN/PROJECTS/MyGithub/emails-app/app/src/store/messages/sagas.js"],"names":["addMessageHandler","clearMessagesHandler","markMessagesReadForUserHandler","watchMessagesSaga","all","delay","put","takeEvery","ACTIONS","updateUser","appConstants","history","action","addMessage","request","payload","userId","username","destination","createdAt","messageId","success","destinations","inbox","push","router","outbox","failure","clearMessages","markMessagesReadForUser","TRIGGER"],"mappings":"wMAOiBA,iB,iDAyBAC,oB,iDAIAC,8B,iDAIAC,iB,EAxCjB,OAASC,GAAT,CAAcC,KAAd,CAAqBC,GAArB,CAA0BC,SAA1B,KAA2C,oBAA3C,CAEA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,WAAzB,CACA,OAASC,UAAT,KAA2B,qBAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,qBAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,gBAApB,CAEA,MAAO,SAAUX,CAAAA,iBAAV,CAA4BY,MAA5B,gNACH,MAAMN,CAAAA,GAAG,CAACE,OAAO,CAACK,UAAR,CAAmBC,OAAnB,CAA2BF,MAAM,CAACG,OAAlC,CAAD,CAAT,CADG,uCAGiEH,MAAM,CAACG,OAHxE,CAGSC,MAHT,iBAGSA,MAHT,CAGiBC,QAHjB,iBAGiBA,QAHjB,CAG2BC,WAH3B,iBAG2BA,WAH3B,CAGwCC,SAHxC,iBAGwCA,SAHxC,CAGmDC,SAHnD,iBAGmDA,SAHnD,iBAIC,MAAMd,CAAAA,GAAG,CAACG,UAAU,CAAC,CACjBO,MAAM,CAANA,MADiB,CAEjBC,QAAQ,CAARA,QAFiB,CAGjBG,SAAS,CAATA,SAHiB,CAIjBF,WAAW,CAAXA,WAJiB,CAKjBC,SAAS,CAATA,SALiB,CAAD,CAAX,CAAT,CAJD,uBAYC,MAAMb,CAAAA,GAAG,CAACE,OAAO,CAACK,UAAR,CAAmBQ,OAAnB,CAA2BT,MAAM,CAACG,OAAlC,CAAD,CAAT,CAZD,wBAcC,MAAMV,CAAAA,KAAK,CAAC,GAAD,CAAX,CAdD,QAeC,GAAIa,WAAW,GAAKR,YAAY,CAACY,YAAb,CAA0BC,KAA9C,CAAqD,CACjDZ,OAAO,CAACa,IAAR,CAAad,YAAY,CAACe,MAAb,CAAoBF,KAAjC,EACH,CAFD,IAEO,CACHZ,OAAO,CAACa,IAAR,CAAad,YAAY,CAACe,MAAb,CAAoBC,MAAjC,EACH,CAnBF,kGAqBC,MAAMpB,CAAAA,GAAG,CAACE,OAAO,CAACK,UAAR,CAAmBc,OAAnB,aAAD,CAAT,CArBD,qEAyBP,MAAO,SAAU1B,CAAAA,oBAAV,CAA+BW,MAA/B,mJACH,MAAMN,CAAAA,GAAG,CAACE,OAAO,CAACoB,aAAR,CAAsBP,OAAtB,CAA8BT,MAAM,CAACG,OAArC,CAAD,CAAT,CADG,wDAIP,MAAO,SAAUb,CAAAA,8BAAV,CAAyCU,MAAzC,6JACH,MAAMN,CAAAA,GAAG,CAACE,OAAO,CAACqB,uBAAR,CAAgCR,OAAhC,CAAwCT,MAAM,CAACG,OAA/C,CAAD,CAAT,CADG,wDAIP,MAAO,SAAUZ,CAAAA,iBAAV,iJACH,MAAMC,CAAAA,GAAG,CAAC,CACNG,SAAS,CAACC,OAAO,CAACK,UAAR,CAAmBiB,OAApB,CAA6B9B,iBAA7B,CADH,CAENO,SAAS,CAACC,OAAO,CAACoB,aAAR,CAAsBE,OAAvB,CAAgC7B,oBAAhC,CAFH,CAGNM,SAAS,CAACC,OAAO,CAACqB,uBAAR,CAAgCC,OAAjC,CAA0C5B,8BAA1C,CAHH,CAAD,CAAT,CADG","sourcesContent":["import { all, delay, put, takeEvery } from 'redux-saga/effects'\n\nimport * as ACTIONS from './actions'\nimport { updateUser } from 'store/users/actions'\nimport appConstants from 'common/appConstants'\nimport history from 'common/history'\n\nexport function* addMessageHandler(action) {\n    yield put(ACTIONS.addMessage.request(action.payload))\n    try {\n        const { userId, username, destination, createdAt, messageId } = action.payload\n        yield put(updateUser({\n            userId,\n            username,\n            messageId,\n            destination,\n            createdAt\n        }))\n        \n        yield put(ACTIONS.addMessage.success(action.payload))\n        \n        yield delay(0.5)\n        if (destination === appConstants.destinations.inbox) {\n            history.push(appConstants.router.inbox)\n        } else {\n            history.push(appConstants.router.outbox)\n        }\n    } catch (e) {\n        yield put(ACTIONS.addMessage.failure(e))\n    }\n}\n\nexport function* clearMessagesHandler(action) {\n    yield put(ACTIONS.clearMessages.success(action.payload))\n}\n\nexport function* markMessagesReadForUserHandler(action) {\n    yield put(ACTIONS.markMessagesReadForUser.success(action.payload))\n}\n\nexport function* watchMessagesSaga() {\n    yield all([\n        takeEvery(ACTIONS.addMessage.TRIGGER, addMessageHandler),\n        takeEvery(ACTIONS.clearMessages.TRIGGER, clearMessagesHandler),\n        takeEvery(ACTIONS.markMessagesReadForUser.TRIGGER, markMessagesReadForUserHandler),\n    \n    ])\n}\n"]},"metadata":{},"sourceType":"module"}