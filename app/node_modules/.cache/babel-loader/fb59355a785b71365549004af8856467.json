{"ast":null,"code":"import _objectSpread from\"/EX_WIN/PROJECTS/MyGithub/emails-app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/EX_WIN/PROJECTS/MyGithub/emails-app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useCallback,useEffect,useRef}from'react';import ScrollBar from'simplebar-react';import'simplebar/dist/simplebar.min.css';import EventHub from'service/EventEmmitter';import appConstants from'common/appConstants';import{jsx as _jsx}from\"react/jsx-runtime\";var Scrollbar=function Scrollbar(props){var id=props.id,ref=props.ref,rest=_objectWithoutProperties(props,[\"id\",\"ref\"]);var scrollEl=useRef();var onScroll=useCallback(function(event){var direction=event.direction,scrollId=event.scrollId;if(id===scrollId){if(scrollEl.current){window.MyScroll=scrollEl.current;var _scrollEl$current=scrollEl.current,contentEl=_scrollEl$current.contentEl,contentWrapperEl=_scrollEl$current.contentWrapperEl;debugger;if(direction===appConstants.scroll.direction.top){contentWrapperEl.scrollTop=0;}else if(direction===appConstants.scroll.direction.down){if(contentWrapperEl.offsetHeight<contentEl.offsetHeight){contentWrapperEl.scrollTop=contentEl.offsetHeight-contentWrapperEl.offsetHeight;}}}}},[id]);useEffect(function(){EventHub.on(appConstants.events.scroll,onScroll);return function(){EventHub.off(appConstants.events.scroll,onScroll);};},[onScroll]);return/*#__PURE__*/_jsx(ScrollBar,_objectSpread(_objectSpread({},rest),{},{ref:scrollEl,style:{width:'100%',height:'100%'}}));};export default Scrollbar;","map":{"version":3,"sources":["/EX_WIN/PROJECTS/MyGithub/emails-app/app/src/components/Scrollbar/index.js"],"names":["React","useCallback","useEffect","useRef","ScrollBar","EventHub","appConstants","Scrollbar","props","id","ref","rest","scrollEl","onScroll","event","direction","scrollId","current","window","MyScroll","contentEl","contentWrapperEl","scroll","top","scrollTop","down","offsetHeight","on","events","off","width","height"],"mappings":"iVAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,SAA7B,CAAwCC,MAAxC,KAAsD,OAAtD,CACA,MAAOC,CAAAA,SAAP,KAAsB,iBAAtB,CACA,MAAO,kCAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,qBAAzB,C,2CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,IACjBC,CAAAA,EADiB,CACID,KADJ,CACjBC,EADiB,CACbC,GADa,CACIF,KADJ,CACbE,GADa,CACLC,IADK,0BACIH,KADJ,eAEzB,GAAMI,CAAAA,QAAQ,CAAGT,MAAM,EAAvB,CAEA,GAAMU,CAAAA,QAAQ,CAAGZ,WAAW,CAAC,SAACa,KAAD,CAAW,IAC5BC,CAAAA,SAD4B,CACJD,KADI,CAC5BC,SAD4B,CACjBC,QADiB,CACJF,KADI,CACjBE,QADiB,CAEpC,GAAIP,EAAE,GAAKO,QAAX,CAAqB,CACjB,GAAIJ,QAAQ,CAACK,OAAb,CAAsB,CAClBC,MAAM,CAACC,QAAP,CAAkBP,QAAQ,CAACK,OAA3B,CADkB,sBAEsBL,QAAQ,CAACK,OAF/B,CAEVG,SAFU,mBAEVA,SAFU,CAECC,gBAFD,mBAECA,gBAFD,CAGlB,SAEA,GAAIN,SAAS,GAAKT,YAAY,CAACgB,MAAb,CAAoBP,SAApB,CAA8BQ,GAAhD,CAAqD,CACjDF,gBAAgB,CAACG,SAAjB,CAA6B,CAA7B,CACH,CAFD,IAEO,IAAIT,SAAS,GAAKT,YAAY,CAACgB,MAAb,CAAoBP,SAApB,CAA8BU,IAAhD,CAAsD,CACzD,GAAIJ,gBAAgB,CAACK,YAAjB,CAAgCN,SAAS,CAACM,YAA9C,CAA4D,CACxDL,gBAAgB,CAACG,SAAjB,CAA6BJ,SAAS,CAACM,YAAV,CAAyBL,gBAAgB,CAACK,YAAvE,CACH,CACJ,CACJ,CACJ,CAEJ,CAlB2B,CAkBzB,CAAEjB,EAAF,CAlByB,CAA5B,CAmBAP,SAAS,CAAC,UAAM,CACZG,QAAQ,CAACsB,EAAT,CAAYrB,YAAY,CAACsB,MAAb,CAAoBN,MAAhC,CAAwCT,QAAxC,EACA,MAAO,WAAM,CACTR,QAAQ,CAACwB,GAAT,CAAavB,YAAY,CAACsB,MAAb,CAAoBN,MAAjC,CAAyCT,QAAzC,EACH,CAFD,CAGH,CALQ,CAKN,CAAEA,QAAF,CALM,CAAT,CAQA,mBAAQ,KAAC,SAAD,gCAAeF,IAAf,MAAqB,GAAG,CAAEC,QAA1B,CAAoC,KAAK,CAAE,CAAEkB,KAAK,CAAE,MAAT,CAAiBC,MAAM,CAAE,MAAzB,CAA3C,GAAR,CACH,CAhCD,CAkCA,cAAexB,CAAAA,SAAf","sourcesContent":["import React, { useCallback, useEffect, useRef } from 'react'\nimport ScrollBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\nimport EventHub from 'service/EventEmmitter';\nimport appConstants from 'common/appConstants';\n\nconst Scrollbar = (props) => {\n    const { id, ref, ...rest } = props\n    const scrollEl = useRef();\n    \n    const onScroll = useCallback((event) => {\n        const { direction, scrollId } = event\n        if (id === scrollId) {\n            if (scrollEl.current) {\n                window.MyScroll = scrollEl.current\n                const { contentEl, contentWrapperEl } = scrollEl.current\n                debugger\n    \n                if (direction === appConstants.scroll.direction.top) {\n                    contentWrapperEl.scrollTop = 0\n                } else if (direction === appConstants.scroll.direction.down) {\n                    if (contentWrapperEl.offsetHeight < contentEl.offsetHeight) {\n                        contentWrapperEl.scrollTop = contentEl.offsetHeight - contentWrapperEl.offsetHeight\n                    }\n                }\n            }\n        }\n    \n    }, [ id ])\n    useEffect(() => {\n        EventHub.on(appConstants.events.scroll, onScroll)\n        return () => {\n            EventHub.off(appConstants.events.scroll, onScroll)\n        }\n    }, [ onScroll ])\n    \n    \n    return (<ScrollBar {...rest} ref={scrollEl} style={{ width: '100%', height: '100%' }}/>)\n}\n\nexport default Scrollbar\n"]},"metadata":{},"sourceType":"module"}