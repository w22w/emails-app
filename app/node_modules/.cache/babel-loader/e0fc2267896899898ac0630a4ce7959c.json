{"ast":null,"code":"import _regeneratorRuntime from\"/EX_WIN/PROJECTS/MyGithub/emails-app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(updateUserHandler),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(clearUsersHandler),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(markAllReadHandler),_marked4=/*#__PURE__*/_regeneratorRuntime.mark(watchUsersSaga);import{all,put,takeEvery}from\"redux-saga/effects\";import*as ACTIONS from\"./actions\";export function updateUserHandler(action){var _action$payload,userId,username,destination,createdAt,messageId;return _regeneratorRuntime.wrap(function updateUserHandler$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return put(ACTIONS.updateUser.request(action.payload));case 2:_context.prev=2;_action$payload=action.payload,userId=_action$payload.userId,username=_action$payload.username,destination=_action$payload.destination,createdAt=_action$payload.createdAt,messageId=_action$payload.messageId;if(!userId){_context.next=7;break;}_context.next=7;return put(ACTIONS.updateUser.success({user:{userId:userId,username:username},destination:destination,messageId:messageId,createdAt:createdAt}));case 7:_context.next=13;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](2);_context.next=13;return put(ACTIONS.updateUser.failure(action.payload));case 13:case\"end\":return _context.stop();}}},_marked,null,[[2,9]]);}export function clearUsersHandler(){return _regeneratorRuntime.wrap(function clearUsersHandler$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return put(ACTIONS.clearUsers.success());case 2:case\"end\":return _context2.stop();}}},_marked2);}export function markAllReadHandler(action){return _regeneratorRuntime.wrap(function markAllReadHandler$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return put(ACTIONS.markAllRead.success(action.payload));case 2:case\"end\":return _context3.stop();}}},_marked3);}export function watchUsersSaga(){return _regeneratorRuntime.wrap(function watchUsersSaga$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return all([takeEvery(ACTIONS.updateUser.TRIGGER,updateUserHandler),takeEvery(ACTIONS.clearUsers.TRIGGER,clearUsersHandler),takeEvery(ACTIONS.markAllRead.TRIGGER,markAllReadHandler)]);case 2:case\"end\":return _context4.stop();}}},_marked4);}","map":{"version":3,"sources":["/EX_WIN/PROJECTS/MyGithub/emails-app/app/src/store/users/sagas.js"],"names":["updateUserHandler","clearUsersHandler","markAllReadHandler","watchUsersSaga","all","put","takeEvery","ACTIONS","action","updateUser","request","payload","userId","username","destination","createdAt","messageId","success","user","failure","clearUsers","markAllRead","TRIGGER"],"mappings":"wMAGiBA,iB,iDAmBAC,iB,iDAIAC,kB,iDAIAC,c,EA9BjB,OAASC,GAAT,CAAcC,GAAd,CAAmBC,SAAnB,KAAoC,oBAApC,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,WAAzB,CAEA,MAAO,SAAUP,CAAAA,iBAAV,CAA4BQ,MAA5B,gNACH,MAAMH,CAAAA,GAAG,CAACE,OAAO,CAACE,UAAR,CAAmBC,OAAnB,CAA2BF,MAAM,CAACG,OAAlC,CAAD,CAAT,CADG,uCAGiEH,MAAM,CAACG,OAHxE,CAGSC,MAHT,iBAGSA,MAHT,CAGiBC,QAHjB,iBAGiBA,QAHjB,CAG2BC,WAH3B,iBAG2BA,WAH3B,CAGwCC,SAHxC,iBAGwCA,SAHxC,CAGmDC,SAHnD,iBAGmDA,SAHnD,KAIKJ,MAJL,yCAKK,MAAMP,CAAAA,GAAG,CACLE,OAAO,CAACE,UAAR,CAAmBQ,OAAnB,CAA2B,CACvBC,IAAI,CAAE,CAAEN,MAAM,CAANA,MAAF,CAAUC,QAAQ,CAARA,QAAV,CADiB,CAEvBC,WAAW,CAAXA,WAFuB,CAGvBE,SAAS,CAATA,SAHuB,CAIvBD,SAAS,CAATA,SAJuB,CAA3B,CADK,CAAT,CALL,uGAeC,MAAMV,CAAAA,GAAG,CAACE,OAAO,CAACE,UAAR,CAAmBU,OAAnB,CAA2BX,MAAM,CAACG,OAAlC,CAAD,CAAT,CAfD,oEAmBP,MAAO,SAAUV,CAAAA,iBAAV,iJACH,MAAMI,CAAAA,GAAG,CAACE,OAAO,CAACa,UAAR,CAAmBH,OAAnB,EAAD,CAAT,CADG,wDAIP,MAAO,SAAUf,CAAAA,kBAAV,CAA6BM,MAA7B,iJACH,MAAMH,CAAAA,GAAG,CAACE,OAAO,CAACc,WAAR,CAAoBJ,OAApB,CAA4BT,MAAM,CAACG,OAAnC,CAAD,CAAT,CADG,wDAIP,MAAO,SAAUR,CAAAA,cAAV,8IACH,MAAMC,CAAAA,GAAG,CAAC,CACNE,SAAS,CAACC,OAAO,CAACE,UAAR,CAAmBa,OAApB,CAA6BtB,iBAA7B,CADH,CAENM,SAAS,CAACC,OAAO,CAACa,UAAR,CAAmBE,OAApB,CAA6BrB,iBAA7B,CAFH,CAGNK,SAAS,CAACC,OAAO,CAACc,WAAR,CAAoBC,OAArB,CAA8BpB,kBAA9B,CAHH,CAAD,CAAT,CADG","sourcesContent":["import { all, put, takeEvery } from \"redux-saga/effects\";\nimport * as ACTIONS from \"./actions\";\n\nexport function* updateUserHandler(action) {\n    yield put(ACTIONS.updateUser.request(action.payload));\n    try {\n        const { userId, username, destination, createdAt, messageId } = action.payload;\n        if (userId) {\n            yield put(\n                ACTIONS.updateUser.success({\n                    user: { userId, username },\n                    destination,\n                    messageId,\n                    createdAt,\n                })\n            );\n        }\n    } catch (e) {\n        yield put(ACTIONS.updateUser.failure(action.payload));\n    }\n}\n\nexport function* clearUsersHandler() {\n    yield put(ACTIONS.clearUsers.success())\n}\n\nexport function* markAllReadHandler(action) {\n    yield put(ACTIONS.markAllRead.success(action.payload))\n}\n\nexport function* watchUsersSaga() {\n    yield all([\n        takeEvery(ACTIONS.updateUser.TRIGGER, updateUserHandler),\n        takeEvery(ACTIONS.clearUsers.TRIGGER, clearUsersHandler),\n        takeEvery(ACTIONS.markAllRead.TRIGGER, markAllReadHandler),\n    \n    ]);\n    \n}\n"]},"metadata":{},"sourceType":"module"}