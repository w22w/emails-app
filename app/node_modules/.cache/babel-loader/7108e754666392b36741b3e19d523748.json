{"ast":null,"code":"import _defineProperty from\"/EX_WIN/PROJECTS/MyGithub/emails-app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/EX_WIN/PROJECTS/MyGithub/emails-app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useMemo,useState}from\"react\";import css from'./User.module.scss';import{shallowEqual,useSelector}from'react-redux';import{getUsersAllByIdUserName,getUsersOutboxByIdCount,getUsersOutboxByIdLastMessageId}from'store/users/selectors';import{getMessagesOutboxByIdBody,getMessagesOutboxByIdSubject}from'store/messages/selectors';import ClassNames from'classnames';import Modal from'../Modal';import UserMessages from'../Modal/UserMessages';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var OutboxUser=function OutboxUser(props){var user=props.user;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showPopup=_useState2[0],setShowPopup=_useState2[1];var userName=useSelector(function(state){return getUsersAllByIdUserName(state,user.id);},shallowEqual);var count=useSelector(function(state){return getUsersOutboxByIdCount(state,user.id);},shallowEqual);var messageId=useSelector(function(state){return getUsersOutboxByIdLastMessageId(state,user.id);},shallowEqual);var subject=useSelector(function(state){return getMessagesOutboxByIdSubject(state,messageId);},shallowEqual);var body=useSelector(function(state){return getMessagesOutboxByIdBody(state,messageId);},shallowEqual);var countersClasses=useMemo(function(){return ClassNames(css.Counter,_defineProperty({},css.Invisible,!count));},[count]);var onRowClick=function onRowClick(e){e&&e.stopPropagation&&e.stopPropagation();setShowPopup(true);};var onClose=function onClose(e){e&&e.stopPropagation&&e.stopPropagation();setShowPopup(false);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:css.UserRow,onClick:onRowClick,children:[/*#__PURE__*/_jsxs(\"div\",{className:ClassNames(css.UserCol,css.First),children:[/*#__PURE__*/_jsx(\"div\",{className:countersClasses,children:count}),/*#__PURE__*/_jsx(\"div\",{children:userName})]}),/*#__PURE__*/_jsx(\"div\",{className:css.UserCol,children:subject}),/*#__PURE__*/_jsx(\"div\",{className:css.UserCol,children:body})]}),showPopup&&/*#__PURE__*/_jsx(Modal,{onClose:onClose,children:/*#__PURE__*/_jsx(UserMessages,{id:user.id,onClose:onClose})})]});};export default OutboxUser;","map":{"version":3,"sources":["/EX_WIN/PROJECTS/MyGithub/emails-app/app/src/components/Users/OutboxUser.js"],"names":["React","useMemo","useState","css","shallowEqual","useSelector","getUsersAllByIdUserName","getUsersOutboxByIdCount","getUsersOutboxByIdLastMessageId","getMessagesOutboxByIdBody","getMessagesOutboxByIdSubject","ClassNames","Modal","UserMessages","OutboxUser","props","user","showPopup","setShowPopup","userName","state","id","count","messageId","subject","body","countersClasses","Counter","Invisible","onRowClick","e","stopPropagation","onClose","UserRow","UserCol","First"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport css from './User.module.scss'\nimport { shallowEqual, useSelector } from 'react-redux';\nimport {\n    getUsersAllByIdUserName,\n    getUsersOutboxByIdCount,\n    getUsersOutboxByIdLastMessageId\n} from 'store/users/selectors';\nimport { getMessagesOutboxByIdBody, getMessagesOutboxByIdSubject } from 'store/messages/selectors';\nimport ClassNames from 'classnames';\nimport Modal from '../Modal';\nimport UserMessages from '../Modal/UserMessages';\n\nconst OutboxUser = (props) => {\n    const { user } = props\n    const [ showPopup, setShowPopup ] = useState(false)\n    const userName = useSelector(state => getUsersAllByIdUserName(state, user.id), shallowEqual)\n    const count = useSelector(state => getUsersOutboxByIdCount(state, user.id), shallowEqual)\n    const messageId = useSelector(state => getUsersOutboxByIdLastMessageId(state, user.id), shallowEqual)\n    const subject = useSelector(state => getMessagesOutboxByIdSubject(state, messageId), shallowEqual)\n    const body = useSelector(state => getMessagesOutboxByIdBody(state, messageId), shallowEqual)\n    \n    const countersClasses = useMemo(() => {\n        return ClassNames(css.Counter, {\n            [ css.Invisible ]: !count\n        })\n    }, [ count ])\n    \n    const onRowClick = (e) => {\n        e && e.stopPropagation && e.stopPropagation()\n        setShowPopup(true)\n    }\n    const onClose = (e) => {\n        e && e.stopPropagation && e.stopPropagation()\n        setShowPopup(false)\n    }\n    \n    return <>\n        <div className={css.UserRow} onClick={onRowClick}>\n            <div className={ClassNames(css.UserCol, css.First)}>\n                <div className={countersClasses}>{count}</div>\n                <div>{userName}</div>\n            </div>\n            <div className={css.UserCol}>{subject}</div>\n            <div className={css.UserCol}>{body}</div>\n        </div>\n        {showPopup && <Modal onClose={onClose}><UserMessages id={user.id} onClose={onClose}/></Modal>}\n    </>\n}\n\nexport default OutboxUser\n"]},"metadata":{},"sourceType":"module"}