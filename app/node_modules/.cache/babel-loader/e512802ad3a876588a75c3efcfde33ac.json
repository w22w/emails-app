{"ast":null,"code":"import{createRoutine}from'redux-saga-routines';var identity=function identity(){var value=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return value;};var createActionsCreatorFlat=function createActionsCreatorFlat(zone_prefix,action_type){var payloadCreator=arguments.length>2&&arguments[2]!==undefined?arguments[2]:identity;var metaCreator=arguments.length>3&&arguments[3]!==undefined?arguments[3]:identity;var BASE_TYPE=\"\".concat(zone_prefix,\"/\").concat(action_type);return createRoutine(BASE_TYPE,payloadCreator,metaCreator);};export var createActionsCreator=function createActionsCreator(zone_prefix){return function(action_type){var payloadCreator=arguments.length>1&&arguments[1]!==undefined?arguments[1]:identity;var metaCreator=arguments.length>2&&arguments[2]!==undefined?arguments[2]:identity;return createActionsCreatorFlat(zone_prefix,action_type,payloadCreator,metaCreator);};};","map":{"version":3,"sources":["/EX_WIN/PROJECTS/MyGithub/emails-app/app/src/store/actionCreatorsFactory.js"],"names":["createRoutine","identity","value","createActionsCreatorFlat","zone_prefix","action_type","payloadCreator","metaCreator","BASE_TYPE","createActionsCreator"],"mappings":"AAAA,OAASA,aAAT,KAA8B,qBAA9B,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAACC,CAAAA,KAAD,2DAAS,EAAT,OAAgBA,CAAAA,KAAhB,EAAjB,CAGA,GAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACC,WAAD,CAAcC,WAAd,CAAiF,IAAtDC,CAAAA,cAAsD,2DAArCL,QAAqC,IAA3BM,CAAAA,WAA2B,2DAAbN,QAAa,CAC9G,GAAMO,CAAAA,SAAS,WAAMJ,WAAN,aAAqBC,WAArB,CAAf,CAEA,MAAOL,CAAAA,aAAa,CAACQ,SAAD,CAAYF,cAAZ,CAA4BC,WAA5B,CAApB,CACH,CAJD,CAMA,MAAO,IAAME,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACL,WAAD,CAAiB,CACjD,MAAO,UAACC,WAAD,CAAoE,IAAtDC,CAAAA,cAAsD,2DAArCL,QAAqC,IAA3BM,CAAAA,WAA2B,2DAAbN,QAAa,CACvE,MAAOE,CAAAA,wBAAwB,CAACC,WAAD,CAAcC,WAAd,CAA2BC,cAA3B,CAA2CC,WAA3C,CAA/B,CACH,CAFD,CAGH,CAJM","sourcesContent":["import { createRoutine } from 'redux-saga-routines'\n\nconst identity = (value = {}) => value\n\n\nconst createActionsCreatorFlat = (zone_prefix, action_type, payloadCreator = identity, metaCreator = identity) => {\n    const BASE_TYPE = `${zone_prefix}/${action_type}`\n\n    return createRoutine(BASE_TYPE, payloadCreator, metaCreator)\n}\n\nexport const createActionsCreator = (zone_prefix) => {\n    return (action_type, payloadCreator = identity, metaCreator = identity) => {\n        return createActionsCreatorFlat(zone_prefix, action_type, payloadCreator, metaCreator)\n    }\n}"]},"metadata":{},"sourceType":"module"}