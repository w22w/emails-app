{"ast":null,"code":"var _jsxFileName = \"/EX_WIN/PROJECTS/MyGithub/emails-app/app/src/components/Users/OutboxUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from \"react\";\nimport css from './User.module.scss';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { getUsersAllByIdUserName, getUsersOutboxByIdCount, getUsersOutboxByIdLastMessageId } from 'store/users/selectors';\nimport { getMessagesOutboxByIdBody, getMessagesOutboxByIdSubject } from 'store/messages/selectors';\nimport ClassNames from 'classnames';\nimport Modal from '../Modal';\nimport UserMessages from '../Modal/UserMessages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OutboxUser = props => {\n  _s();\n\n  const {\n    user\n  } = props;\n  const [showPopup, setShowPopup] = useState(false);\n  const userName = useSelector(state => getUsersAllByIdUserName(state, user.id), shallowEqual);\n  const count = useSelector(state => getUsersOutboxByIdCount(state, user.id), shallowEqual);\n  const messageId = useSelector(state => getUsersOutboxByIdLastMessageId(state, user.id), shallowEqual);\n  const subject = useSelector(state => getMessagesOutboxByIdSubject(state, messageId), shallowEqual);\n  const body = useSelector(state => getMessagesOutboxByIdBody(state, messageId), shallowEqual);\n  const countersClasses = useMemo(() => {\n    return ClassNames(css.Counter, {\n      [css.Invisible]: !count\n    });\n  }, [count]);\n\n  const onRowClick = e => {\n    e && e.stopPropagation && e.stopPropagation();\n    setShowPopup(true);\n  };\n\n  const onClose = e => {\n    e && e.stopPropagation && e.stopPropagation();\n    setShowPopup(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.UserRow,\n      onClick: onRowClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: ClassNames(css.UserCol, css.First),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: countersClasses,\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.UserCol,\n        children: subject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.UserCol,\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: onClose,\n      children: /*#__PURE__*/_jsxDEV(UserMessages, {\n        id: user.id,\n        onClose: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OutboxUser, \"KzaR5/gyiPBbcxMJLITU4fjphEY=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = OutboxUser;\nexport default OutboxUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"OutboxUser\");","map":{"version":3,"sources":["/EX_WIN/PROJECTS/MyGithub/emails-app/app/src/components/Users/OutboxUser.js"],"names":["React","useMemo","useState","css","shallowEqual","useSelector","getUsersAllByIdUserName","getUsersOutboxByIdCount","getUsersOutboxByIdLastMessageId","getMessagesOutboxByIdBody","getMessagesOutboxByIdSubject","ClassNames","Modal","UserMessages","OutboxUser","props","user","showPopup","setShowPopup","userName","state","id","count","messageId","subject","body","countersClasses","Counter","Invisible","onRowClick","e","stopPropagation","onClose","UserRow","UserCol","First"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,QAAyC,OAAzC;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,aAA1C;AACA,SACIC,uBADJ,EAEIC,uBAFJ,EAGIC,+BAHJ,QAIO,uBAJP;AAKA,SAASC,yBAAT,EAAoCC,4BAApC,QAAwE,0BAAxE;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA,QAAM,CAAEE,SAAF,EAAaC,YAAb,IAA8BhB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMiB,QAAQ,GAAGd,WAAW,CAACe,KAAK,IAAId,uBAAuB,CAACc,KAAD,EAAQJ,IAAI,CAACK,EAAb,CAAjC,EAAmDjB,YAAnD,CAA5B;AACA,QAAMkB,KAAK,GAAGjB,WAAW,CAACe,KAAK,IAAIb,uBAAuB,CAACa,KAAD,EAAQJ,IAAI,CAACK,EAAb,CAAjC,EAAmDjB,YAAnD,CAAzB;AACA,QAAMmB,SAAS,GAAGlB,WAAW,CAACe,KAAK,IAAIZ,+BAA+B,CAACY,KAAD,EAAQJ,IAAI,CAACK,EAAb,CAAzC,EAA2DjB,YAA3D,CAA7B;AACA,QAAMoB,OAAO,GAAGnB,WAAW,CAACe,KAAK,IAAIV,4BAA4B,CAACU,KAAD,EAAQG,SAAR,CAAtC,EAA0DnB,YAA1D,CAA3B;AACA,QAAMqB,IAAI,GAAGpB,WAAW,CAACe,KAAK,IAAIX,yBAAyB,CAACW,KAAD,EAAQG,SAAR,CAAnC,EAAuDnB,YAAvD,CAAxB;AAEA,QAAMsB,eAAe,GAAGzB,OAAO,CAAC,MAAM;AAClC,WAAOU,UAAU,CAACR,GAAG,CAACwB,OAAL,EAAc;AAC3B,OAAExB,GAAG,CAACyB,SAAN,GAAmB,CAACN;AADO,KAAd,CAAjB;AAGH,GAJ8B,EAI5B,CAAEA,KAAF,CAJ4B,CAA/B;;AAMA,QAAMO,UAAU,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,IAAIA,CAAC,CAACC,eAAP,IAA0BD,CAAC,CAACC,eAAF,EAA1B;AACAb,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAHD;;AAIA,QAAMc,OAAO,GAAIF,CAAD,IAAO;AACnBA,IAAAA,CAAC,IAAIA,CAAC,CAACC,eAAP,IAA0BD,CAAC,CAACC,eAAF,EAA1B;AACAb,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAHD;;AAKA,sBAAO;AAAA,4BACH;AAAK,MAAA,SAAS,EAAEf,GAAG,CAAC8B,OAApB;AAA6B,MAAA,OAAO,EAAEJ,UAAtC;AAAA,8BACI;AAAK,QAAA,SAAS,EAAElB,UAAU,CAACR,GAAG,CAAC+B,OAAL,EAAc/B,GAAG,CAACgC,KAAlB,CAA1B;AAAA,gCACI;AAAK,UAAA,SAAS,EAAET,eAAhB;AAAA,oBAAkCJ;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAMH;AAAN;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAEhB,GAAG,CAAC+B,OAApB;AAAA,kBAA8BV;AAA9B;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAK,QAAA,SAAS,EAAErB,GAAG,CAAC+B,OAApB;AAAA,kBAA8BT;AAA9B;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,EASFR,SAAS,iBAAI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEe,OAAhB;AAAA,6BAAyB,QAAC,YAAD;AAAc,QAAA,EAAE,EAAEhB,IAAI,CAACK,EAAvB;AAA2B,QAAA,OAAO,EAAEW;AAApC;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,YATX;AAAA,kBAAP;AAWH,CAnCD;;GAAMlB,U;UAGeT,W,EACHA,W,EACIA,W,EACFA,W,EACHA,W;;;KAPXS,U;AAqCN,eAAeA,UAAf","sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport css from './User.module.scss'\nimport { shallowEqual, useSelector } from 'react-redux';\nimport {\n    getUsersAllByIdUserName,\n    getUsersOutboxByIdCount,\n    getUsersOutboxByIdLastMessageId\n} from 'store/users/selectors';\nimport { getMessagesOutboxByIdBody, getMessagesOutboxByIdSubject } from 'store/messages/selectors';\nimport ClassNames from 'classnames';\nimport Modal from '../Modal';\nimport UserMessages from '../Modal/UserMessages';\n\nconst OutboxUser = (props) => {\n    const { user } = props\n    const [ showPopup, setShowPopup ] = useState(false)\n    const userName = useSelector(state => getUsersAllByIdUserName(state, user.id), shallowEqual)\n    const count = useSelector(state => getUsersOutboxByIdCount(state, user.id), shallowEqual)\n    const messageId = useSelector(state => getUsersOutboxByIdLastMessageId(state, user.id), shallowEqual)\n    const subject = useSelector(state => getMessagesOutboxByIdSubject(state, messageId), shallowEqual)\n    const body = useSelector(state => getMessagesOutboxByIdBody(state, messageId), shallowEqual)\n    \n    const countersClasses = useMemo(() => {\n        return ClassNames(css.Counter, {\n            [ css.Invisible ]: !count\n        })\n    }, [ count ])\n    \n    const onRowClick = (e) => {\n        e && e.stopPropagation && e.stopPropagation()\n        setShowPopup(true)\n    }\n    const onClose = (e) => {\n        e && e.stopPropagation && e.stopPropagation()\n        setShowPopup(false)\n    }\n    \n    return <>\n        <div className={css.UserRow} onClick={onRowClick}>\n            <div className={ClassNames(css.UserCol, css.First)}>\n                <div className={countersClasses}>{count}</div>\n                <div>{userName}</div>\n            </div>\n            <div className={css.UserCol}>{subject}</div>\n            <div className={css.UserCol}>{body}</div>\n        </div>\n        {showPopup && <Modal onClose={onClose}><UserMessages id={user.id} onClose={onClose}/></Modal>}\n    </>\n}\n\nexport default OutboxUser\n"]},"metadata":{},"sourceType":"module"}