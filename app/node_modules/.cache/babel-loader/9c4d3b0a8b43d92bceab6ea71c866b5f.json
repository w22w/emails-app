{"ast":null,"code":"import _objectSpread from\"/EX_WIN/PROJECTS/MyGithub/emails-app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"/EX_WIN/PROJECTS/MyGithub/emails-app/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _initialState;import appConstants from\"common/appConstants\";import produce from\"immer\";import*as ACTIONS from\"./actions\";export var initialState=(_initialState={users:{}},_defineProperty(_initialState,appConstants.destinations.inbox,{}),_defineProperty(_initialState,appConstants.destinations.outbox,{}),_initialState);var usersReducer=function usersReducer(){var initState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:_objectSpread({},initialState);var action=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return produce(initState,function(state){switch(action.type){case ACTIONS.updateUser.REQUEST:{return;}case ACTIONS.updateUser.SUCCESS:{var _action$payload=action.payload,user=_action$payload.user,destination=_action$payload.destination,createdAt=_action$payload.createdAt,messageId=_action$payload.messageId;if(user&&user.userId){state.users[user.userId]=_objectSpread({},user);}if(state[destination]){if(state[destination][user.userId]){state[destination][user.userId].count+=1;state[destination][user.userId].lastUpdate=createdAt;state[destination][user.userId].lastMessageId=messageId;}else{state[destination][user.userId]={count:1,lastUpdate:createdAt,lastMessageId:messageId};}}return;}case ACTIONS.updateUser.FAILURE:{return;}case ACTIONS.markAllRead.SUCCESS:{var userId=action.payload.userId;if(state[appConstants.destinations.inbox][userId]){state[appConstants.destinations.inbox][userId].count=0;}if(state[appConstants.destinations.outbox][userId]){state[appConstants.destinations.outbox][userId].count=0;}return;}case ACTIONS.clearUsers.SUCCESS:{return _objectSpread({},initState);}default:{return;}}});};export default usersReducer;","map":{"version":3,"sources":["/EX_WIN/PROJECTS/MyGithub/emails-app/app/src/store/users/reducer.js"],"names":["appConstants","produce","ACTIONS","initialState","users","destinations","inbox","outbox","usersReducer","initState","action","state","type","updateUser","REQUEST","SUCCESS","payload","user","destination","createdAt","messageId","userId","count","lastUpdate","lastMessageId","FAILURE","markAllRead","clearUsers"],"mappings":"iVAAA,MAAOA,CAAAA,YAAP,KAAyB,qBAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,OAApB,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,WAAzB,CAEA,MAAO,IAAMC,CAAAA,YAAY,iBACvBC,KAAK,CAAE,EADgB,gCAErBJ,YAAY,CAACK,YAAb,CAA0BC,KAFL,CAEc,EAFd,gCAGrBN,YAAY,CAACK,YAAb,CAA0BE,MAHL,CAGe,EAHf,gBAAlB,CAMP,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAACC,CAAAA,SAAD,4EAAkBN,YAAlB,KAAkCO,CAAAA,MAAlC,2DAA2C,EAA3C,OACjBT,CAAAA,OAAO,CAACQ,SAAD,CAAY,SAACE,KAAD,CAAW,CAC5B,OAAQD,MAAM,CAACE,IAAf,EACE,IAAKV,CAAAA,OAAO,CAACW,UAAR,CAAmBC,OAAxB,CAAiC,CAC/B,OACD,CACD,IAAKZ,CAAAA,OAAO,CAACW,UAAR,CAAmBE,OAAxB,CAAiC,qBACqBL,MAAM,CAACM,OAD5B,CACvBC,IADuB,iBACvBA,IADuB,CACjBC,WADiB,iBACjBA,WADiB,CACJC,SADI,iBACJA,SADI,CACOC,SADP,iBACOA,SADP,CAE/B,GAAIH,IAAI,EAAIA,IAAI,CAACI,MAAjB,CAAyB,CACvBV,KAAK,CAACP,KAAN,CAAaa,IAAI,CAACI,MAAlB,mBAAkCJ,IAAlC,EACD,CACD,GAAIN,KAAK,CAAEO,WAAF,CAAT,CAA0B,CACxB,GAAIP,KAAK,CAAEO,WAAF,CAAL,CAAsBD,IAAI,CAACI,MAA3B,CAAJ,CAAyC,CACvCV,KAAK,CAAEO,WAAF,CAAL,CAAsBD,IAAI,CAACI,MAA3B,EAAoCC,KAApC,EAA6C,CAA7C,CACAX,KAAK,CAAEO,WAAF,CAAL,CAAsBD,IAAI,CAACI,MAA3B,EAAoCE,UAApC,CAAiDJ,SAAjD,CACAR,KAAK,CAAEO,WAAF,CAAL,CAAsBD,IAAI,CAACI,MAA3B,EAAoCG,aAApC,CAAoDJ,SAApD,CACD,CAJD,IAIO,CACLT,KAAK,CAAEO,WAAF,CAAL,CAAsBD,IAAI,CAACI,MAA3B,EAAsC,CACpCC,KAAK,CAAE,CAD6B,CAEpCC,UAAU,CAAEJ,SAFwB,CAGpCK,aAAa,CAAEJ,SAHqB,CAAtC,CAKD,CACF,CACD,OACD,CACD,IAAKlB,CAAAA,OAAO,CAACW,UAAR,CAAmBY,OAAxB,CAAiC,CAC/B,OACD,CAED,IAAKvB,CAAAA,OAAO,CAACwB,WAAR,CAAoBX,OAAzB,CAAkC,IACxBM,CAAAA,MADwB,CACbX,MAAM,CAACM,OADM,CACxBK,MADwB,CAEhC,GAAIV,KAAK,CAAEX,YAAY,CAACK,YAAb,CAA0BC,KAA5B,CAAL,CAA0Ce,MAA1C,CAAJ,CAAwD,CACtDV,KAAK,CAAEX,YAAY,CAACK,YAAb,CAA0BC,KAA5B,CAAL,CAA0Ce,MAA1C,EAAmDC,KAAnD,CAA2D,CAA3D,CACD,CACD,GAAIX,KAAK,CAAEX,YAAY,CAACK,YAAb,CAA0BE,MAA5B,CAAL,CAA2Cc,MAA3C,CAAJ,CAAyD,CACvDV,KAAK,CAAEX,YAAY,CAACK,YAAb,CAA0BE,MAA5B,CAAL,CAA2Cc,MAA3C,EAAoDC,KAApD,CAA4D,CAA5D,CACD,CACD,OACD,CACD,IAAKpB,CAAAA,OAAO,CAACyB,UAAR,CAAmBZ,OAAxB,CAAiC,CAC/B,wBACKN,SADL,EAGD,CAED,QAAS,CACP,OACD,CA9CH,CAgDD,CAjDM,CADU,EAArB,CAoDA,cAAeD,CAAAA,YAAf","sourcesContent":["import appConstants from \"common/appConstants\";\nimport produce from \"immer\";\nimport * as ACTIONS from \"./actions\";\n\nexport const initialState = {\n  users: {},\n  [ appConstants.destinations.inbox ]: {},\n  [ appConstants.destinations.outbox ]: {},\n};\n\nconst usersReducer = (initState = { ...initialState }, action = {}) =>\n    produce(initState, (state) => {\n      switch (action.type) {\n        case ACTIONS.updateUser.REQUEST: {\n          return;\n        }\n        case ACTIONS.updateUser.SUCCESS: {\n          const { user, destination, createdAt, messageId } = action.payload;\n          if (user && user.userId) {\n            state.users[ user.userId ] = { ...user };\n          }\n          if (state[ destination ]) {\n            if (state[ destination ][ user.userId ]) {\n              state[ destination ][ user.userId ].count += 1;\n              state[ destination ][ user.userId ].lastUpdate = createdAt;\n              state[ destination ][ user.userId ].lastMessageId = messageId;\n            } else {\n              state[ destination ][ user.userId ] = {\n                count: 1,\n                lastUpdate: createdAt,\n                lastMessageId: messageId\n              };\n            }\n          }\n          return;\n        }\n        case ACTIONS.updateUser.FAILURE: {\n          return;\n        }\n        \n        case ACTIONS.markAllRead.SUCCESS: {\n          const { userId } = action.payload\n          if (state[ appConstants.destinations.inbox ][ userId ]) {\n            state[ appConstants.destinations.inbox ][ userId ].count = 0\n          }\n          if (state[ appConstants.destinations.outbox ][ userId ]) {\n            state[ appConstants.destinations.outbox ][ userId ].count = 0\n          }\n          return;\n        }\n        case ACTIONS.clearUsers.SUCCESS: {\n          return {\n            ...initState\n          }\n        }\n        \n        default: {\n          return;\n        }\n      }\n    });\n\nexport default usersReducer\n"]},"metadata":{},"sourceType":"module"}